'      *********    DO NOT MODIFY THIS FILE     *********
'      This file is regenerated by a design tool. Making
'      changes to this file can cause errors.
Imports System
Imports System.Collections.Generic
Namespace Expression.Blend.DataStore.networks

	Public Class networksGlobalStorage
		Public Shared Singleton As networksGlobalStorage
		Private _registrar As List(Of WeakReference)
		Private _loading As Boolean

		
		Public Property Loading As Boolean
		Get
			Return Me._loading
		End Get
		Set(ByVal value As Boolean)
				Me._loading = value
		End Set
		End Property
		
		Shared Sub New()
			networksGlobalStorage.Singleton = New networksGlobalStorage
		End Sub
		
		Public Sub New()
			Me._registrar = New List(Of WeakReference)
		End Sub

		Public Sub Register(ByVal dataStore As networks)
			Me._registrar.Add(new WeakReference(dataStore))
		End Sub
		
		Public Sub OnPropertyChanged(ByVal propertyName As String)
			Dim entry As WeakReference
			For Each entry In Me._registrar
				If entry.IsAlive Then
					DirectCast(entry.Target, networks).FirePropertyChanged(propertyName)
				End If
			Next
		End Sub
				
		Public ReadOnly Property AssignementAllowed As Boolean
			Get
				If (Me.Loading AndAlso (Me._registrar.Count > 0)) Then
					Return False
				End If
				Return True
			End Get
		End Property 

		'Properties listed below

		Private _Property1 As String = String.Empty
		Public Property Property1() As String
			Get
				Return Me._Property1
			End Get

			Set(ByVal value As String)
				If (Me.AssignementAllowed AndAlso (Me._Property1 <> value)) Then
					Me._Property1 = value
					Me.OnPropertyChanged("Property1")
				End If
			End Set
		End Property
	End Class

	Public Class networks
		Implements System.ComponentModel.INotifyPropertyChanged

		Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Public Sub FirePropertyChanged(ByVal propertyName As String)
			Me.OnPropertyChanged(propertyName)
		End Sub
		
		Protected Overridable Sub OnPropertyChanged(ByVal propertyName As String)
			Dim handler As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
			If handler IsNot Nothing Then
				RaiseEvent PropertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
			End If
		End Sub

		Public Sub New()
			MyBase.New()
			Try
				Dim resourceUri As System.Uri = New System.Uri("/ardbeg;component/DataStore/networks/networks.xaml", System.UriKind.Relative)
				If System.Windows.Application.GetResourceStream(resourceUri) IsNot Nothing Then
					networksGlobalStorage.Singleton.Loading = True
					System.Windows.Application.LoadComponent(Me, resourceUri)
					networksGlobalStorage.Singleton.Loading = False
					networksGlobalStorage.Singleton.Register(Me)
				End If
			Catch __exception As System.Exception
			End Try
		End Sub

		Private _Property1 As String = String.Empty
		Public Property Property1() As String
			Get
				 Return networksGlobalStorage.Singleton.Property1
			End Get

			Set(ByVal value As String)
				networksGlobalStorage.Singleton.Property1 = value
			End Set
		End Property
	End Class
End Namespace
